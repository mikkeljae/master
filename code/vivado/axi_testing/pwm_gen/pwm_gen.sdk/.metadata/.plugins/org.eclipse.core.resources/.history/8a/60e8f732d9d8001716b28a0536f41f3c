/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "xil_io.h"

#include "rgb_led.h"
#include "interface.h"
#include "motor_pwm.h"

#define ON 30000
#define OFF 50000

#define RGB0_BASEADDR XPAR_RGB_LED_0_S00_AXI_BASEADDR
#define RGB1_BASEADDR XPAR_RGB_LED_1_S00_AXI_BASEADDR
#define RGB2_BASEADDR XPAR_RGB_LED_2_S00_AXI_BASEADDR

#define INTERFACE_BASEADDR XPAR_INTERFACE_0_S00_AXI_BASEADDR

#define MPWM_BASEADDR XPAR_MOTOR_PWM_0_S00_AXI_BASEADDR

#define EM_MCU 	0x00
#define DIS		0x04
#define M_RELAY	0x08
#define INRUSH	0x0C

#define COMPVAL 0x00
#define DIR	 	0x04

#define RANGE 	2273
#define TO_PWM(n)	((1-n)*RANGE)

int main()
{
    init_platform();

    print("Hello World\n\r");

    RGB_LED_mWriteReg(RGB0_BASEADDR, 0x00, OFF);
    RGB_LED_mWriteReg(RGB0_BASEADDR, 0x04, OFF);
    RGB_LED_mWriteReg(RGB0_BASEADDR, 0x08, ON);

    RGB_LED_mWriteReg(RGB1_BASEADDR, 0x00, OFF);
    RGB_LED_mWriteReg(RGB1_BASEADDR, 0x04, ON);
    RGB_LED_mWriteReg(RGB1_BASEADDR, 0x08, OFF);

    RGB_LED_mWriteReg(RGB2_BASEADDR, 0x00, ON);
    RGB_LED_mWriteReg(RGB2_BASEADDR, 0x04, OFF);
    RGB_LED_mWriteReg(RGB2_BASEADDR, 0x08, OFF);

    INTERFACE_mWriteReg(INTERFACE_BASEADDR, DIS, 0x00);
    INTERFACE_mWriteReg(INTERFACE_BASEADDR, EM_MCU, 0x00);

    INTERFACE_mWriteReg(INTERFACE_BASEADDR, INRUSH, 0x01);
    for(i = 0; i < 100000000; i++)
    INTERFACE_mWriteReg(INTERFACE_BASEADDR, M_RELAY, 0x01);


    MOTOR_PWM_mWriteReg(MPWM_BASEADDR, 0x00, TO_PWM(0.1));

    cleanup_platform();
    return 0;
}
